version: '3.7'

services:
  app:
    build:
        context: ./
    image: farpost-app
    restart: unless-stopped
    ports:
        - "8000:8000"
    env_file:
      - .env
    depends_on:
      - celery
      - migrate
    environment:
      DATABASE_DSN: "postgresql+asyncpg://${PG_USER:-postgres}:${PG_PASSWORD:-postgres}@postgres:5432/${PG_DB:-postgres}"
      REDIS_DSN: "redis://redis:6379"
    command: gunicorn -b 0.0.0.0:8000 -k uvicorn.workers.UvicornWorker app:app
  
  celery:
    image: farpost-app
    env_file:
      - .env
    depends_on:
      - celery-beat
    environment:
      DATABASE_DSN: "postgresql+asyncpg://${PG_USER:-postgres}:${PG_PASSWORD:-postgres}@postgres:5432/${PG_DB:-postgres}"
      REDIS_DSN: "redis://redis:6379"
    command: celery -A app:celery worker --loglevel=INFO
  
  celery-beat:
    image: farpost-app
    env_file:
      - .env
    depends_on:
      redis:
        condition: service_started
    environment:
      DATABASE_DSN: "postgresql+asyncpg://${PG_USER:-postgres}:${PG_PASSWORD:-postgres}@postgres:5432/${PG_DB:-postgres}"
      REDIS_DSN: "redis://redis:6379"
    command: celery -A app:celery beat --loglevel=INFO -S redbeat.RedBeatScheduler

  migrate:
    image: farpost-app
    depends_on:
      postgres:
        condition: service_healthy
    env_file:
      - .env
    tty: true
    entrypoint: [ "alembic", "upgrade", "head" ]

  redis:
    image: redis:7.2.4-alpine3.19
    restart: unless-stopped
    volumes:
      - cache:/data

  postgres:
    image: postgres:alpine3.20
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${PG_DB:-postgres}
      POSTGRES_USER: ${PG_USER:-postgres}
      POSTGRES_PASSWORD: ${PG_PASSWORD:-postgres}
      PGDATA: /var/lib/postgresql/data
    volumes:
      - database:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD", "pg_isready", "-q", "-U", "${PG_USER:-postgres}", "-d", "${PG_DB:-postgres}"]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  cache:
  database:
